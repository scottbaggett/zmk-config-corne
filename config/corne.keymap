#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1300  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 30    // default: 10
#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3
#define EXTRA 4

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };

        para: para {
            compatible = "zmk,behavior-tap-dance";
            label = "PARA";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        caps: caps {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS";
            #binding-cells = <0>;
            continue-list = <MINUS BACKSPACE>;
        };

        paraless: paraless {
            compatible = "zmk,behavior-mod-morph";
            label = "PARALESS";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        paragreat: paragreat {
            compatible = "zmk,behavior-mod-morph";
            label = "PARAGREAT";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    macros {
        browsertab: browsertab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LCTRL>;
        };
    };

    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        toMouse {
            bindings = <&to 4>;
            key-positions = <3 16 14>;
            layers = <0>;
        };

        exitMouse {
            bindings = <&to 0>;
            key-positions = <3 16 14>;
            layers = <4>;
        };
    };

    //

    keymap {
        compatible = "zmk,keymap";

        MAIN {
            display-name = "main";

            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&kp TAB         &kp Q  &kp W  &kp E         &kp R        &kp T          &kp Y      &kp U              &kp I            &kp O    &kp P     &kp BACKSPACE
&kp LCTRL       &kp A  &kp S  &kp D         &hm LSHFT F  &kp G          &kp H      &hm RIGHT_SHIFT J  &kp K            &kp L    &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C         &kp V        &kp B          &kp N      &kp M              &kp COMMA        &kp DOT  &kp FSLH  &kp RSHFT
                              &kp LEFT_GUI  &mo 1        &lt 5 ENTER    &kp SPACE  &lt 2 BACKSPACE    &kp RIGHT_SHIFT
            >;
        };

        Symbol {
            display-name = "SYM";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&kp GRAVE  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT    &kp CARET       &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans     &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5         &kp EQUAL       &kp MINUS      &kp SQT       &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE
&trans     &kp NUMBER_6     &kp N7        &kp N8        &kp N9        &kp N0         &kp UNDERSCORE  &kp PLUS       &kp COMMA     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans
                                          &trans        &trans        &trans         &trans          &trans         &trans
            >;
        };

        CMD {
            display-name = "COMMANDS";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp LC(LA(D))     &kp LC(LA(E))  &kp LC(LA(LEFT))  &kp LA(LC(RIGHT))  &kp LC(LA(ENTER))    &kp LA(LC(LG(LS(NUMBER_1))))  &kp LA(LS(LC(LG(NUMBER_2))))  &kp UP_ARROW    &kp LS(LA(LC(LG(NUMBER_4))))  &kp LS(LA(LC(LG(N5))))  &trans
&trans  &kp C_PLAY_PAUSE  &kp C_PREV     &kp C_NEXT        &kp LEFT_SHIFT     &kp LS(LG(ENTER))    &kp HOME                      &kp LEFT_ARROW                &kp DOWN_ARROW  &kp RIGHT                     &kp END                 &trans
&trans  &trans            &trans         &trans            &kp C_VOLUME_DOWN  &kp C_VOL_UP         &kp DEL                       &kp BACKSPACE                 &kp PAGE_DOWN   &kp PG_UP                     &trans                  &trans
                                         &trans            &trans             &kp LG(SPACE)        &trans                        &trans                        &trans
            >;
        };

        SYS {
            display-name = "System";
            bindings = <
&trans  &kp F1        &kp F2        &kp F3        &kp F4      &kp F5            &kp F6  &kp F7  &kp F8  &kp F9  &kp F10      &trans
&trans  &kp F11       &kp F12       &trans        &trans      &studio_unlock    &trans  &trans  &trans  &trans  &trans       &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR  &bt BT_CLR_ALL    &trans  &trans  &trans  &trans  &bootloader  &trans
                                    &trans        &trans      &trans            &trans  &trans  &trans
            >;
        };

        MouseNav {
            display-name = "Mouse";
            bindings = <
&trans  &trans  &trans          &mmv MOVE_UP    &trans           &trans    &trans     &trans          &msc SCRL_UP    &trans           &trans     &trans
&trans  &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans    &mkp LCLK  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT  &mkp RCLK  &trans
&trans  &trans  &trans          &trans          &trans           &trans    &trans     &trans          &trans          &trans           &trans     &trans
                                &trans          &trans           &trans    &trans     &trans          &to 0
            >;
        };

        Cmd2 {
            bindings = <
&trans  &trans  &trans  &trans  &kp LG(LS(NUMBER_4))  &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                &trans       &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &kp ESCAPE            &kp SPACE    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        System {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
